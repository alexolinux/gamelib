services:

  mongodb:
    image: mongo:latest
    container_name: gamelib_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db # Persiste os dados do MongoDB
    networks:
      - gamelib_network

  backend:
    build:
      context: ./backend # O Dockerfile do backend está dentro da pasta 'backend'
      dockerfile: Dockerfile
    container_name: gamelib_backend
    ports:
      - "3000:3000" # Mapeia a porta 3000 do container para a porta 3000 da sua máquina
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb:27017/gamelib # Conecta ao serviço 'mongodb'
      RAWG_API_KEY: ${RAWG_API_KEY} # Obtém a chave do arquivo .env
    depends_on:
      - mongodb # Garante que o MongoDB inicie antes do backend
    volumes:
      - ./backend:/app # Monta o código-fonte do backend no container
      - /app/node_modules # Evita que o node_modules local sobrescreva o do container
    networks:
      - gamelib_network

  frontend:
    build:
      context: ./frontend # O Dockerfile do frontend está dentro da pasta 'frontend'
      dockerfile: Dockerfile
    container_name: gamelib_frontend
    ports:
      - "8080:8080" # Mapeia a porta 8080 do container para a porta 8080 da sua máquina
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:3000 # URL da API do backend para o frontend
    depends_on:
      - backend # Garante que o backend inicie antes do frontend
    volumes:
      - ./frontend:/app # Monta o código-fonte do frontend no container
      - /app/node_modules # Evita que o node_modules local sobrescreva o do container
    networks:
      - gamelib_network

volumes:
  mongodb_data: # Volume para persistir os dados do MongoDB

networks:
  gamelib_network:
    driver: bridge

